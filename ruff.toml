# Exclude a variety of commonly ignored directories.
exclude = [
    "migrations",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

line-length = 120
indent-width = 4

# the python version to target, useful when considering code upgrades, defaults to "py310"
target-version = "py39"  


[lint]
extend-select = [
    "I",    # isort                     - sorts imports alphabetically and organizes into sections and by type
    "F",    # Pyflakes                  - checks Python source files for errors
    "E",    # pycodestyle Error         - tool to enforce PEP 8 style conventions
    "W",    # pycodestyle Warning       - tool to highlight deviations from PEP 8 style conventions
    "N",    # pep8-naming               - ensures code follows PEP 8 naming conventions
    "UP",   # pyupgrade                 - upgrades syntax to newer Python versions automatically
    "YTT",  # flake8-2020               - identifies misuse of sys.version or sys.version_info
    "ANN",  # flake8-annotations        - detects the absence of PEP 3107-style function annotations
    "COM",  # flake8-commas             - enforces comma placement rules
    "S",    # flake8-bandit             - performs automated security testing
    "C90",  # mccabe                    - Nedâ€™s script to check McCabe complexity
    "D",    # pydocstyle                - checks Python docstring conventions
    ]

ignore = ["ANN101", "COM812"]

[lint.per-file-ignores]
"tests/*" = ["S101"]

fixable = ["ALL"]

[lint.pydocstyle]
convention = "google"

[format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"